/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algorithms;

import algorithms.grafico.linhas;
import algorithms.grafico.linhas2;

import java.awt.Graphics;

import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author Bernardo
 */
public class tela extends javax.swing.JFrame {

    /**
     * Creates new form tela
     */
    public tela() {
        initComponents();
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelInterno = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JBvetorCrescente = new javax.swing.JButton();
        JBVetorDecrescente = new javax.swing.JButton();
        JBVetorAleatorio = new javax.swing.JButton();
        JBVetorRepetido = new javax.swing.JButton();
        JLtipo_de_vetor_selecionado = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        JLalgaritmo_usado = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        JLtempo_de_organizacao = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        JBQuantidade_100 = new javax.swing.JButton();
        JBQuantidade_200 = new javax.swing.JButton();
        JBQuantidade_300 = new javax.swing.JButton();
        JBQuantidade_400 = new javax.swing.JButton();
        JBQuantidade_500 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        JBbuble = new javax.swing.JButton();
        JBQuick = new javax.swing.JButton();
        JBinsertion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tela_Log_funcionamento = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        JBiniciarTeste = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        painelInterno.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout painelInternoLayout = new javax.swing.GroupLayout(painelInterno);
        painelInterno.setLayout(painelInternoLayout);
        painelInternoLayout.setHorizontalGroup(
            painelInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1103, Short.MAX_VALUE)
        );
        painelInternoLayout.setVerticalGroup(
            painelInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        jLabel3.setText("vetor original");

        jLabel4.setText("vetor organizado");

        JBvetorCrescente.setText("vetor ordenado crescente");
        JBvetorCrescente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBvetorCrescenteActionPerformed(evt);
            }
        });

        JBVetorDecrescente.setText("vetor ordenado decrescente");
        JBVetorDecrescente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBVetorDecrescenteActionPerformed(evt);
            }
        });

        JBVetorAleatorio.setText("ordem aleatoria");
        JBVetorAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBVetorAleatorioActionPerformed(evt);
            }
        });

        JBVetorRepetido.setText("alguns repetidos");
        JBVetorRepetido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBVetorRepetidoActionPerformed(evt);
            }
        });

        JLtipo_de_vetor_selecionado.setText("vetor não selecionado");

        jLabel5.setText("algoritmo organizador:");

        jLabel6.setText("vetor:");

        jLabel8.setText("tempo:");

        jLabel7.setText("quantidade de numeros no vetor:");

        JBQuantidade_100.setText("100.000");
        JBQuantidade_100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBQuantidade_100ActionPerformed(evt);
            }
        });

        JBQuantidade_200.setText("200.000");
        JBQuantidade_200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBQuantidade_200ActionPerformed(evt);
            }
        });

        JBQuantidade_300.setText("300.000");
        JBQuantidade_300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBQuantidade_300ActionPerformed(evt);
            }
        });

        JBQuantidade_400.setText("400.000");
        JBQuantidade_400.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBQuantidade_400ActionPerformed(evt);
            }
        });

        JBQuantidade_500.setText("500.000");
        JBQuantidade_500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBQuantidade_500ActionPerformed(evt);
            }
        });

        jLabel9.setText("organização do vetor");

        jLabel10.setText("algoritmo organizador:");

        JBbuble.setText("Bubble Sort");
        JBbuble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBbubleActionPerformed(evt);
            }
        });

        JBQuick.setText("Quick Sort");
        JBQuick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBQuickActionPerformed(evt);
            }
        });

        JBinsertion.setText("insertion sort");
        JBinsertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBinsertionActionPerformed(evt);
            }
        });

        Tela_Log_funcionamento.setColumns(20);
        Tela_Log_funcionamento.setRows(5);
        jScrollPane1.setViewportView(Tela_Log_funcionamento);

        jLabel11.setText("Log de uso do programa:");

        JBiniciarTeste.setText("Organizar vetor");
        JBiniciarTeste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	JBiniciarTesteActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JLtipo_de_vetor_selecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JLalgaritmo_usado, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JLtempo_de_organizacao, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(213, 213, 213)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(JBbuble)
                                        .addGap(18, 18, 18)
                                        .addComponent(JBQuick)
                                        .addGap(18, 18, 18)
                                        .addComponent(JBinsertion)))
                                .addGap(249, 249, 249)
                                .addComponent(JBiniciarTeste, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(JBvetorCrescente)
                                        .addGap(18, 18, 18)
                                        .addComponent(JBVetorDecrescente)
                                        .addGap(18, 18, 18)
                                        .addComponent(JBVetorAleatorio)
                                        .addGap(18, 18, 18)
                                        .addComponent(JBVetorRepetido))
                                    .addComponent(jLabel9)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JBQuantidade_100)
                                .addGap(18, 18, 18)
                                .addComponent(JBQuantidade_200)
                                .addGap(18, 18, 18)
                                .addComponent(JBQuantidade_300)
                                .addGap(18, 18, 18)
                                .addComponent(JBQuantidade_400)
                                .addGap(18, 18, 18)
                                .addComponent(JBQuantidade_500)))
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(0, 61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(192, 192, 192))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(JLtempo_de_organizacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLtipo_de_vetor_selecionado)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)))
                    .addComponent(JLalgaritmo_usado, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JBvetorCrescente)
                            .addComponent(JBVetorDecrescente)
                            .addComponent(JBVetorAleatorio)
                            .addComponent(JBVetorRepetido))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(JBQuantidade_100)
                                    .addComponent(JBQuantidade_200)
                                    .addComponent(JBQuantidade_300)
                                    .addComponent(JBQuantidade_400)
                                    .addComponent(JBQuantidade_500))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(JBbuble)
                                    .addComponent(JBQuick)
                                    .addComponent(JBinsertion))
                                .addContainerGap(22, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JBiniciarTeste, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    linhas linha = new linhas();
    public static boolean threadGo= false;
    public  static vetores vetorAleatorio;
    public  static boolean vetorAleatoriobol = false;
    public  static vetores vetorOrganizadoCrescente;
    public static boolean vetorOrganizadoCrescentebol= false;
    public static vetores vetorOrganizadoDecrescente;
    public static boolean vetorOrganizadoDecrescentebol= false;
    public static vetores vetorAleatorioRepedindo;
    public static boolean vetorAleatorioRepedindobol= false;
    public static int TamanhoVetor =100000;
    public static int metodo;
    
    public static vetores vetorEstatico;
    private void todasMenosEsta(int i){
        switch(i){
            case 1:
                vetorAleatoriobol = false;
                vetorOrganizadoCrescentebol = true;
                vetorOrganizadoDecrescentebol= false;
                vetorAleatorioRepedindobol= false;
                break;
            case 2:
                vetorAleatoriobol = false;
                vetorOrganizadoCrescentebol = false;
                vetorOrganizadoDecrescentebol= true;
                vetorAleatorioRepedindobol= false;
                break;
            case 3:
                vetorAleatoriobol = true;
                vetorOrganizadoCrescentebol = false;
                vetorOrganizadoDecrescentebol= false;
                vetorAleatorioRepedindobol= false;
                break;
            case 4:
                vetorAleatoriobol = false;
                vetorOrganizadoCrescentebol = false;
                vetorOrganizadoDecrescentebol= false;
                vetorAleatorioRepedindobol= true;
                break;
            default:
                break;
                        
        }
    }
        
    static public  JPanel  getPainel(){
        return painelInterno;
    }
    static public void ColocaIsso(JPanel painel){
        painelInterno.add(painel);
    }
    static public void limpaIsso(){
        painelInterno.removeAll();
    }
    static public void arrumaPosicao(){
        
    	javax.swing.GroupLayout painelInternoLayout = new javax.swing.GroupLayout(painelInterno);
        painelInterno.setLayout(painelInternoLayout);
        painelInternoLayout.setHorizontalGroup(
            painelInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1103, Short.MAX_VALUE)
        );
        painelInternoLayout.setVerticalGroup(
            painelInternoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );
    }
     public Graphics g = getGraphics();
   
    private void JBiniciarTesteActionPerformed(java.awt.event.ActionEvent evt){
    	vetores vetorEstatico = null;
    	threadGo = true;
    	int i = 0;
    	if(tela.vetorAleatorioRepedindobol){
            vetorEstatico= vetorAleatorioRepedindo;
            i=4;

        }else if(tela.vetorAleatoriobol){
           vetorEstatico = vetorAleatorio;
           i = 3;
            
        }else if(tela.vetorOrganizadoCrescentebol){
          vetorEstatico = vetorOrganizadoCrescente;
          i = 1;

        }else if(tela.vetorOrganizadoDecrescentebol){
            vetorEstatico = vetorOrganizadoDecrescente;
            i= 2;
        }
    	threadOrganiza_vetor organiza = new threadOrganiza_vetor(metodo);
    	threadPreenche_grafico atualiza = new threadPreenche_grafico(vetorEstatico,i ,getGraphics());
    	Thread atualizaTela = new Thread(atualiza);
    	Thread preenche = new Thread(organiza);
    	atualizaTela.start();    	
    	preenche.start();
    	
    }
    private void JBVetorAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBVetorAleatorioActionPerformed
        // TODO add your handling code here:
    	painelInterno.removeAll();
        arrumaPosicao();
        vetorAleatorio = new vetores(3, TamanhoVetor);
        vetorEstatico = vetorAleatorio;
        
        linha.paintComponent(getGraphics());      
        painelInterno.remove(linha);
        painelInterno.add(linha);
        
       /* linhas2  linha2= new linhas2();
        linha2.setVetor(3);
        linha2.paintComponent(getGraphics());
        painelInterno.add(linha2);
        Tela_Log_funcionamento.append("tentativa de colocar linhas \n");*/
        linha.setVisible(true);
        todasMenosEsta(3);
    	Tela_Log_funcionamento.append("Vetor definido como aleatorio\n");
         JLtipo_de_vetor_selecionado.setText("Aleatorio");
    }//GEN-LAST:event_JBVetorAleatorioActionPerformed

    private void JBvetorCrescenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBvetorCrescenteActionPerformed
        // TODO add your handling code here:
    	painelInterno.removeAll();
    	arrumaPosicao();
        vetorOrganizadoCrescente = new vetores(1, TamanhoVetor);
       	vetorEstatico = vetorOrganizadoCrescente;
        linha.paintComponent(getGraphics());      
        painelInterno.remove(linha);
        
        painelInterno.add(linha);
        /*linhas2  linha2= new linhas2();
        linha2.setVetor(1);
        linha2.paintComponent(getGraphics());
        painelInterno.add(linha2);*/
        
        linha.setVisible(true);
        todasMenosEsta(1);
       Tela_Log_funcionamento.append("Vetor definido como crescente\n");
       JLtipo_de_vetor_selecionado.setText("Crescente");
    }//GEN-LAST:event_JBvetorCrescenteActionPerformed

    private void JBbubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBbubleActionPerformed
        // TODO add your handling code here:
    	metodo = 3;
    	JLalgaritmo_usado.setText("Bubble");
    	Tela_Log_funcionamento.append("metodo definido: Bubble\n");
    }//GEN-LAST:event_JBbubleActionPerformed

    private void JBQuickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBQuickActionPerformed
        // TODO add your handling code here:
    	metodo = 1;
    	JLalgaritmo_usado.setText("Quick");
    	Tela_Log_funcionamento.append("metodo definido: Quick\n");
    }//GEN-LAST:event_JBQuickActionPerformed

    private void JBinsertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBinsertionActionPerformed
        // TODO add your handling code here:
    	metodo = 2;
    	JLalgaritmo_usado.setText("Insertion");
    	Tela_Log_funcionamento.append("metodo definido: Insertion\n");
    }//GEN-LAST:event_JBinsertionActionPerformed

    private void JBQuantidade_100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBQuantidade_100ActionPerformed
        // TODO add your handling code here:
        TamanhoVetor = 100000;
        Tela_Log_funcionamento.append("Tamanho definido: "+TamanhoVetor+"\n");
    }//GEN-LAST:event_JBQuantidade_100ActionPerformed

    private void JBQuantidade_200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBQuantidade_200ActionPerformed
        // TODO add your handling code here:
        
        TamanhoVetor = 200000;
        Tela_Log_funcionamento.append("Tamanho definido: "+TamanhoVetor+" \n");
    }//GEN-LAST:event_JBQuantidade_200ActionPerformed

    private void JBQuantidade_300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBQuantidade_300ActionPerformed
        // TODO add your handling code here:
        
        TamanhoVetor = 300000;
        Tela_Log_funcionamento.append("Tamanho definido: "+TamanhoVetor+" \n");
    }//GEN-LAST:event_JBQuantidade_300ActionPerformed

    private void JBQuantidade_400ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBQuantidade_400ActionPerformed
        // TODO add your handling code here:
        TamanhoVetor = 400000;
        Tela_Log_funcionamento.append("Tamanho definido: "+TamanhoVetor+" \n");
    }//GEN-LAST:event_JBQuantidade_400ActionPerformed

    private void JBQuantidade_500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBQuantidade_500ActionPerformed
        // TODO add your handling code here:
        TamanhoVetor = 500000;
        Tela_Log_funcionamento.append("Tamanho definido: "+TamanhoVetor+" \n");
    }//GEN-LAST:event_JBQuantidade_500ActionPerformed

    private void JBVetorDecrescenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBVetorDecrescenteActionPerformed
        // TODO add your handling code here:
    	painelInterno.removeAll();
    	 
    	painelInterno.remove(linha);
         vetorOrganizadoDecrescente = new vetores(2, TamanhoVetor);
         vetorEstatico = vetorOrganizadoDecrescente;
         arrumaPosicao();
         linha.paintComponent(getGraphics());      
         todasMenosEsta(2);
         
         painelInterno.add(linha);
         /*linhas2  linha2= new linhas2();
         linha2.setVetor(2);
         todasMenosEsta(2);
         linha2.paintComponent(getGraphics());
         painelInterno.add(linha2);
         Tela_Log_funcionamento.append("tentativa de colocar linhas \n");*/
         linha.setVisible(true);
         
         Tela_Log_funcionamento.append("Vetor definido Decrescente\n");
          JLtipo_de_vetor_selecionado.setText("Decrescente");
    }//GEN-LAST:event_JBVetorDecrescenteActionPerformed

    private void JBVetorRepetidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBVetorRepetidoActionPerformed
        // TODO add your handling code here:
    	painelInterno.removeAll();
    	 arrumaPosicao();
    	 todasMenosEsta(4);
         vetorAleatorioRepedindo = new vetores(4, TamanhoVetor);
         vetorEstatico = vetorAleatorioRepedindo;
         linha.paintComponent(getGraphics());
         painelInterno.add(linha);
        /* linhas2  linha2= new linhas2();
         linha2.setVetor(4);
         todasMenosEsta(4);
         linha2.paintComponent(getGraphics());
         painelInterno.add(linha2);
         */
         linha.setVisible(true);
         Tela_Log_funcionamento.append("Vetor definido Aleatorio repetido\n"); 
         
          JLtipo_de_vetor_selecionado.setText("Membros repetidos");
    }//GEN-LAST:event_JBVetorRepetidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tela().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBQuantidade_100;
    private javax.swing.JButton JBQuantidade_200;
    private javax.swing.JButton JBQuantidade_300;
    private javax.swing.JButton JBQuantidade_400;
    private javax.swing.JButton JBQuantidade_500;
    private javax.swing.JButton JBQuick;
    private javax.swing.JButton JBVetorAleatorio;
    private javax.swing.JButton JBVetorDecrescente;
    private javax.swing.JButton JBVetorRepetido;
    private javax.swing.JButton JBbuble;
    private javax.swing.JButton JBiniciarTeste;
    private javax.swing.JButton JBinsertion;
    private javax.swing.JButton JBvetorCrescente;
    private javax.swing.JLabel JLalgaritmo_usado;
    static public javax.swing.JLabel JLtempo_de_organizacao;
    private javax.swing.JLabel JLtipo_de_vetor_selecionado;
    private javax.swing.JTextArea Tela_Log_funcionamento;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    static public javax.swing.JPanel painelInterno;
    // End of variables declaration//GEN-END:variables
}
